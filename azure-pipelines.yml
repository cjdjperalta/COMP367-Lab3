trigger:
- master

pool:
  name: Default  # Uses your self-hosted agent

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: 'Build and Publish'
  jobs:
  - job: BuildJob
    displayName: 'Build MVCMovie App'
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.0.x'  # Match your .NET SDK version

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'Build App'

    - task: DotNetCoreCLI@2
      displayName: 'Publish App'
      inputs:
        command: publish
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Locally'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployJob
    displayName: 'Copy Files to Local Server'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - powershell: |
        $source = "$(System.ArtifactsDirectory)\drop\MvcMovie\MvcMovie\bin\Release\net6.0\publish"
        $destination = "C:\inetpub\wwwroot\MVCMovie"

        Write-Host "Deploying from $source to $destination"
        if (!(Test-Path $destination)) {
          New-Item -ItemType Directory -Path $destination
        }

        Copy-Item -Path "$source\*" -Destination $destination -Recurse -Force
      displayName: 'ðŸ“¤ Deploy to Local IIS Folder'

